[{"C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\index.js":"1","C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\App.js":"2","C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\js\\Main.js":"3","C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\js\\Auth\\Login.js":"4","C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\js\\MyPage.js":"5","C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\js\\Auth\\Join.js":"6","C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\js\\Form\\Footer.js":"7","C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\js\\Form\\Header.js":"8"},{"size":487,"mtime":1681371270520,"results":"9","hashOfConfig":"10"},{"size":596,"mtime":1681371270518,"results":"11","hashOfConfig":"10"},{"size":11992,"mtime":1681716691437,"results":"12","hashOfConfig":"10"},{"size":5256,"mtime":1681714265752,"results":"13","hashOfConfig":"10"},{"size":10290,"mtime":1681371270535,"results":"14","hashOfConfig":"10"},{"size":7779,"mtime":1681371270522,"results":"15","hashOfConfig":"10"},{"size":233,"mtime":1681371270527,"results":"16","hashOfConfig":"10"},{"size":1208,"mtime":1681371270529,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wg4n4z",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\index.js",[],[],"C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\App.js",["47"],[],"import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\r\nimport \"./reset.css\"\r\nimport Main from './js/Main.js';\r\nimport Login from './js/Auth/Login.js'\r\nimport Join from './js/Auth/Join';\r\nimport MyPage from './js/MyPage';\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path = '/' element = {<Main/>}/>\r\n        <Route path='/login' element={<Login />}/>\r\n        <Route path='/join' element={<Join />}/>\r\n        <Route path='/myPage' element={<MyPage />}/>\r\n\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;","C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\js\\Main.js",["48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70"],[],"C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\js\\Auth\\Login.js",["71","72","73","74"],[],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./login.css\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nfunction Login() {\r\n    const [email, setInputEmail] = useState(\"\");\r\n    const [pass, setInputPw] = useState(\"\");\r\n\r\n    const emailRef = useRef(\"\");\r\n    const passRef = useRef(\"\");\r\n\r\n    const handleInputEmail = (e) => {\r\n        setInputEmail(e.target.value);\r\n    };\r\n\r\n    const handleInputPw = (e) => {\r\n        setInputPw(e.target.value);\r\n    };\r\n\r\n    const onKeyPressLogin = (e) => {\r\n        if (e.key == 'Enter') {\r\n            onClickLogin();\r\n        }\r\n    }\r\n    const onClickLogin = (e) => {\r\n        console.log(\"click login\");\r\n        console.log(\"Email : \", email);\r\n        console.log(\"PW : \", pass);\r\n\r\n        if (emailRef.current.value == '') {\r\n            alert(\"아이디가 입력되지 않았습니다\");\r\n            emailRef.current.focus();\r\n        } else if (passRef.current.value == '') {\r\n            alert(\"비밀번호가 입력되지 않았습니다\");\r\n            passRef.current.focus();\r\n        } else {\r\n            axios\r\n                .post(\"/login\", {\r\n                    email: email,\r\n                    pass: pass,\r\n                })\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    if (res.data === \"\") {\r\n                        // id 일치하지 않는 경우 userId = undefined, msg = '입력하신 id 가 일치하지 않습니다.'\r\n                        console.log(\"======================\", res.data.msg);\r\n                        // alert(\"아이디 혹은 비밀번호가 일치하지 않습니다.\");\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: '아이디 혹은 비밀번호가 일치하지 않습니다.',\r\n                            // timer: 100000,\r\n                        }).then((q) => {\r\n                            if (q.isConfirmed) {\r\n                                document.location.href = \"/login\";\r\n                            }\r\n                        }\r\n\r\n                        );\r\n\r\n\r\n                    } else if (res.data !=null ) {\r\n                        // id, pw 모두 일치 userId = userId1, msg = undefined\r\n                        // console.log(res.data);\r\n                        sessionStorage.setItem(\"tokenId\", res.data.split(\"/\")[0]); \r\n\r\n                        sessionStorage.setItem(\"refreshTokenId\", res.data.split(\"/\")[1]); // sessionStorage에 id를 user_id라는 key 값으로 저장\r\n\r\n                        console.log(\"======================\", \"로그인 성공\");\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            title: '로그인 성공!',\r\n                            // timer: 100000,\r\n                        }).then((q) => {\r\n                            if (q.isConfirmed) {\r\n\r\n                                document.location.href = \"/\";\r\n\r\n                            }\r\n                        }\r\n\r\n                        );\r\n                    }\r\n                })\r\n                .catch();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"LoginForm\">\r\n            <div className=\"navLogo\" onClick={clickLogo}>\r\n                <span className=\"navLogo\">\r\n                    JOB-HUNTER </span>\r\n            </div>\r\n            <div className=\"InputId\">\r\n                <input\r\n                    type=\"text\"\r\n                    path=\"email\"\r\n                    placeholder=\"이메일\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={handleInputEmail}\r\n                    onKeyPress={(e) => onKeyPressLogin(e)}\r\n                    ref={emailRef}\r\n                />\r\n            </div>\r\n            <div className=\"InputPw\">\r\n                <input\r\n                    type=\"password\"\r\n                    path=\"pass\"\r\n                    placeholder=\"비밀번호\"\r\n                    name=\"pass\"\r\n                    value={pass}\r\n                    onChange={handleInputPw}\r\n                    onKeyPress={(e) => onKeyPressLogin(e)}\r\n                    ref={passRef}\r\n                />\r\n            </div>\r\n            <div className=\"LoginBtn\" onClick={onClickLogin}>\r\n                로그인\r\n            </div>\r\n            <div className=\"LoginOption\">\r\n                <ul className=\"option-list\">\r\n                    <li className=\"list-item-text\">\r\n                        <a href=\"/findId\" id=\"findId\">\r\n                            아이디 찾기\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"list-item-text\">\r\n                        <a href=\"/findPw\" id=\"findPw\">\r\n                            비밀번호 찾기\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"list-item-text\">\r\n                        <a href=\"/join\" id=\"signUp\">\r\n                            회원가입\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst clickLogo = () => {\r\n    document.location.href = \"/\";\r\n};\r\n\r\nexport default Login;","C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\js\\MyPage.js",["75","76","77","78","79","80"],[],"import { useEffect, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"./MyPage.css\";\r\nimport Header from './Form/Header';\r\nimport axios from \"axios\";\r\n\r\nfunction MyPage() {\r\n  return (\r\n    <div className=\"MyPageContent\">\r\n      <Header />\r\n      <MyPageContent />\r\n\r\n      \r\n    </div>\r\n  )\r\n}\r\nfunction MyPageContent() {\r\n  const ID = sessionStorage.getItem(\"tokenId\")\r\n  const [inputData, setInputData] = useState([{\r\n    uno:'',\r\n    email: '',\r\n    nickname:'',\r\n    phone:'',\r\n    companyname: '',\r\n    companyimg: '',\r\n    company_start: '',\r\n    company_end: '',\r\n    company_link: '',\r\n    // 채용정보\r\n  }])\r\n  const run = () => {\r\n    axios\r\n        .get(\"/mypage\", {\r\n            headers: {\r\n                Authorization: `${sessionStorage.getItem(\"tokenId\")}`,\r\n                refreshTokenId: `${sessionStorage.getItem(\"refreshTokenId\")}`\r\n            }\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            console.log(sessionStorage.getItem(\"tokenId\"));\r\n            console.log(sessionStorage.getItem(\"refreshTokenId\"));\r\n            setInputData(res.data)\r\n\r\n            // if (res.data == true) {\r\n            //     // console.log(res.data)\r\n\r\n            // } \r\n            if (res.data[0] == \"false\") {\r\n                sessionStorage.removeItem(\"tokenId\")\r\n                console.log(res.data);\r\n                axios.get(\"/refresh\", {\r\n                    headers: {\r\n                        refreshTokenId: `${sessionStorage.getItem(\"refreshTokenId\")}`\r\n                    }\r\n                }).then((res) => {\r\n                    console.log(res.data);\r\n                    sessionStorage.setItem(\"tokenId\", res.data)\r\n                    \r\n                    if (res.data[0] == \"false\"){\r\n                        \r\n\r\n                \r\n                        Swal.fire({\r\n                            title: '로그인 유효시간 종료!',\r\n                            text: '로그인 페이지로 이동하시겠습니까?',\r\n                            icon: 'warning',\r\n    \r\n                            showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음\r\n                            confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정\r\n                            cancelButtonColor: '#d33', // cancel 버튼 색깔 지정\r\n                            confirmButtonText: '승인', // confirm 버튼 텍스트 지정\r\n                            cancelButtonText: '취소', // cancel 버튼 텍스트 지정\r\n    \r\n                            reverseButtons: true, // 버튼 순서 거꾸로\r\n\r\n                            \r\n    \r\n                        }).then(result => {\r\n\r\n                            sessionStorage.clear()\r\n                            // 만약 Promise리턴을 받으면,\r\n                            if (result.isConfirmed) { // 만약 모달창에서 confirm 버튼을 눌렀다면\r\n    \r\n                                window.location.href = \"/login\";\r\n                            }else{\r\n                                window.location.href = \"/\";\r\n                            }\r\n                        });\r\n                    }else if (res.data == sessionStorage.getItem(\"tokenId\")) { \r\n                      window.location.href = \"/mypage\";\r\n                    }\r\n                })\r\n            } \r\n            \r\n        })\r\n}\r\n\r\nuseEffect(run, [])\r\n  console.log(inputData);\r\n\r\n  const jlink = (link, e) => {\r\n    // console.log(link);\r\n\r\n    if (link != null) {\r\n        const jobKorea = \"https://www.jobkorea.co.kr\" + link;\r\n        window.open(jobKorea);\r\n    } else {\r\n        window.location.href = \"/\";\r\n    }\r\n}\r\n\r\nconst bookmark = (e, companyname, plan, img, link) => {\r\n  if (ID == null) {\r\n      Swal.fire({\r\n          title: '즐겨찾기 기능은 로그인 후 가능합니다!',\r\n          text: '로그인 페이지로 이동하겠습니까?',\r\n          icon: 'warning',\r\n\r\n          showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음\r\n          confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정\r\n          cancelButtonColor: '#d33', // cancel 버튼 색깔 지정\r\n          confirmButtonText: '승인', // confirm 버튼 텍스트 지정\r\n          cancelButtonText: '취소', // cancel 버튼 텍스트 지정\r\n\r\n          reverseButtons: true, // 버튼 순서 거꾸로\r\n\r\n      }).then(result => {\r\n          // 만약 Promise리턴을 받으면,\r\n          if (result.isConfirmed) { // 만약 모달창에서 confirm 버튼을 눌렀다면\r\n\r\n              window.location.href = \"/login\";\r\n          }\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n  if (ID != null) {\r\n      var start, end\r\n\r\n      start = plan.split('~')[0]\r\n      end = plan.split('~')[1]\r\n\r\n      console.log(ID, companyname, start, end, img, link);\r\n\r\n      axios\r\n          .post(\"/company-save\",\r\n              {\r\n                  companyname: companyname,\r\n                  companyimg: img,\r\n                  company_start: start,\r\n                  company_end: end,\r\n                  company_link: link\r\n\r\n              },{headers: {Authorization: `${sessionStorage.getItem(\"tokenId\")}`}}\r\n              ).then(result => {\r\n                \r\n                console.log(result);\r\n            });\r\n  }\r\n\r\n}\r\n\r\nconst delete_bookmark= (e, companyname) => {\r\n  if (ID != null) {\r\n      Swal.fire({\r\n          title: '즐겨찾기 삭제를 하시겠습니까?',\r\n\r\n          icon: 'warning',\r\n\r\n          showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음\r\n          confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정\r\n          cancelButtonColor: '#d33', // cancel 버튼 색깔 지정\r\n          confirmButtonText: '승인', // confirm 버튼 텍스트 지정\r\n          cancelButtonText: '취소', // cancel 버튼 텍스트 지정\r\n\r\n          reverseButtons: true, // 버튼 순서 거꾸로\r\n\r\n      }).then(result => {\r\n          // 만약 Promise리턴을 받으면,\r\n          if (result.isConfirmed) { // 만약 모달창에서 confirm 버튼을 눌렀다면\r\n\r\n            axios\r\n            .post(\"/company-delete\",\r\n                {\r\n                    companyname: companyname\r\n  \r\n                },{headers: {Authorization: `${sessionStorage.getItem(\"tokenId\")}`}}\r\n                ).then(result=>{\r\n\r\n                    if(result.data==1){\r\n                      window.location.reload();\r\n                    }\r\n                    else{\r\n                      console.log(\"삭제실패\");\r\n                    }\r\n                })\r\n          }\r\n      });\r\n  }\r\n\r\n}\r\n\r\n  return (\r\n      <div class=\"metee_mypage_main_wraper_join_style\">\r\n          <span class=\"myPageInfutTitle\">이메일</span>\r\n\t\t\t\t\t<input class=\"myPageInputBox\"  id='reg_mb_id' name=\"id\" value={inputData[0].email} readonly /> \r\n\r\n\r\n          <span class=\"myPageInfutTitle\">비밀번호</span>\r\n\t\t\t\t\t<input class=\"myPageInputBox\" type=\"password\"\r\n\t\t\t\t\t\tname=\"pass\" maxlength=\"20\" required\r\n\t\t\t\t\t\tplaceholder=\"password-1\"/>\r\n\t\t\t\t\r\n\r\n          <span class=\"myPageInfutTitle\">이름</span>\r\n\t\t\t\t\t<input class=\"myPageInputBox\"  id='reg_mb_id' name=\"id\" value={inputData[0].nickname} readonly /> \r\n\r\n          <span class=\"myPageInfutTitle\">전화번호</span>\r\n\t\t\t\t\t<input class=\"myPageInputBox\"  id='reg_mb_id' name=\"id\" value={inputData[0].phone} readonly /> \r\n\r\n          <span class=\"myPageInfutTitle\">내가 찜한 채용공고</span>\r\n\t\t\t\t\t<div className=\"Card1\">\r\n            <div className=\"c1image\">\r\n            {inputData.map((v, index) => {\r\n            if (index > 0){\r\n              var plan\r\n              plan = v.company_start + \"~\" + v.company_end\r\n              return <ItemBox name={v.companyname} plan={plan} link={v.company_link} img={v.companyimg} />\r\n              // return v.companyname\r\n            }\r\n          })}\r\n            </div>\r\n        </div>\r\n          \r\n          <div align=\"center\" class=\"profile_correction\">\r\n\t\t\t  </div>\r\n    </div>\r\n  )\r\n\r\n\r\n  function ItemBox(props) {\r\n    return (\r\n        <div class=\"container\">\r\n            <div class=\"card u-clearfix\">\r\n                <div class=\"card-media\" onClick={(e) => { jlink(props.link) }}>\r\n                    <img src={props.img} alt=\"\" class=\"card-media-img\" />\r\n                </div>\r\n                <img src=\"img/delete.png\" class=\"delete-img\" width=\"10px\" onClick={(e) => { delete_bookmark(e,props.name) }}></img>\r\n\r\n                <div class=\"card-body\">\r\n                    <h2 class=\"card-body-heading\">{props.name}</h2>\r\n                    <div class=\"card-body-options\">\r\n                        <div class=\"card-body-option card-body-option-favorite\">\r\n                            <svg fill=\"#d12e46\" height=\"26\" viewBox=\"0 0 24 24\" width=\"26\" xmlns=\"http://www.w3.org/2000/svg\" onClick={(e) => { bookmark(e, props.name, props.plan, props.img, props.link) }}>\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                                <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\" />\r\n                            </svg>\r\n                        </div>\r\n                        <div class=\"card-body-option card-body-option-share\">\r\n                            <svg fill=\"#9C948A\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                                <path d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z\" />\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <div class=\"card-button card-button-link\">\r\n                        <span>{props.plan}</span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\n\r\nexport default MyPage;","C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\js\\Auth\\Join.js",["81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109"],[],"import \"./join.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction Join() {\r\n  const [email, setInputEmail] = useState(\"\");\r\n  const [pass, setInputPw] = useState(\"\");\r\n  const [pass2, setInputPw2] = useState(\"\");\r\n  const [nickname, setInputnickname] = useState(\"\");\r\n  const [sex, setInputSex] = useState(\"\");\r\n  const [birth, setInputBirth] = useState(\"\");\r\n  const [phone, setInputPhone] = useState(\"\");\r\n  const [idMes, setIdMes] = useState(\"\");\r\n  const [passMes, setPassMes] = useState(\"\");\r\n  const [nickNameMes, setNickNameMes] = useState(\"\");\r\n  let [id_, setId] = useState();\r\n  let [pass_, setPass] = useState();\r\n  let [nickname_, setNickName] = useState();\r\n\r\n  const handleInputEmail = (e) => {\r\n    setInputEmail(e.target.value);\r\n  };\r\n\r\n  const handleInputPw = (e) => {\r\n    setInputPw(e.target.value);\r\n  };\r\n\r\n  const handleInputPw2 = (e) => {\r\n    setInputPw2(e.target.value);\r\n  };\r\n\r\n  const handleInputnickname = (e) => {\r\n    setInputnickname(e.target.value);\r\n  };\r\n\r\n  const handleInputSex = (e) => {\r\n    setInputSex(e.target.value);\r\n  };\r\n\r\n  const handleInputBirth = (e) => {\r\n    setInputBirth(e.target.value);\r\n  };\r\n\r\n  const handleInputPhone = (e) => {\r\n    setInputPhone(e.target.value);\r\n  };\r\n\r\n  const idCheck = () => {\r\n    axios\r\n      .post(\"/idCheck\", { email: email })\r\n      .then((idRes) => {\r\n        console.log(idRes);\r\n        console.log(\"idRes.data :: \", idRes.data);\r\n\r\n        if (idRes.data == 1) {\r\n          setIdMes(\"가능\");\r\n          setId(1);\r\n        } else if (idRes.data == 0) {\r\n          setIdMes(\"불가능\");\r\n          // alert(\"아이디중복됨\")\r\n          document.getElementById(\"email\").focus();\r\n          setId(0);\r\n        }\r\n      })\r\n      .catch();\r\n      \r\n  };\r\n\r\n  const pwCheck = () => {\r\n    axios\r\n      .post(\"/passCheck\", { pass: pass, pass2: pass2 })\r\n      .then((passRes) => {\r\n        console.log(passRes);\r\n        console.log(\"passRes.data :: \", passRes.data);\r\n\r\n        if (passRes.data == 1) {\r\n          setPassMes(\"일치\");\r\n          setPass(1);\r\n        } else if (passRes.data == 0) {\r\n          setPassMes(\"불일치\");\r\n          setPass(0);\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  const nickCheck = () => {\r\n    axios\r\n      .post(\"/nickname\", { nickname: nickname })\r\n      .then((nickRes) => {\r\n        console.log(nickRes);\r\n        console.log(\"nickRes.data :: \", nickRes.data);\r\n\r\n        if (nickRes.data == 1) {\r\n          setNickNameMes(\"가능\");\r\n          setNickName(1);\r\n        } else if (nickRes.data == 0) {\r\n          setNickNameMes(\"중복\");\r\n          setNickName(0);\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  const onClickJoin = () => {\r\n    // alert(email, pass, pass2, nickname, sex, birth, phone)\r\n    if (\r\n      email != \"\" &&\r\n      pass != \"\" &&\r\n      pass2 != \"\" &&\r\n      nickname != \"\" &&\r\n      sex != \"\" &&\r\n      birth != \"\" &&\r\n      phone != \"\"\r\n    ) {\r\n      if (id_ == 1 && pass_ == 1 && nickname_ == 1) {\r\n        console.log(\"click Join\");\r\n        console.log(\"email : \", email);\r\n        console.log(\"PW : \", pass);\r\n        console.log(\"PW2 : \", pass2);\r\n        console.log(\"nickname : \", nickname);\r\n        console.log(\"sex : \", sex);\r\n        console.log(\"birth : \", birth);\r\n        console.log(\"phone : \", phone);\r\n        axios\r\n          .post(\"http://localhost:8080/join\", {\r\n            email: email,\r\n            pass: pass,\r\n            pass2: pass2,\r\n            nickname: nickname,\r\n            sex: sex,\r\n            birth: birth,\r\n            phone: phone,\r\n          })\r\n          .then((joinRes) => {\r\n            if (joinRes.data == 1) {\r\n              Swal.fire({\r\n                icon: 'success',\r\n                title: '회원가입 성공!',\r\n                // timer: 100000,\r\n            }).then((q) => {\r\n              if(q.isConfirmed){\r\n                document.location.href = \"/\";\r\n              }\r\n            }\r\n            );\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      } else if (id_ == 0) {\r\n        alert(\"아이디가 중복됩니다\");\r\n      } else if (pass_ == 0) {\r\n        alert(\"암호가 일치하지 않습니다\");\r\n      } else if (nickname_ == 0) {\r\n        alert(\"닉네임이 중복됩니다\");\r\n      }\r\n    } else {\r\n      alert(\"입력하지 않은 항목이 있습니다\");\r\n    }\r\n\r\n    console.log(\"=====\", id_, pass_, nickname_);\r\n    console.log(email);\r\n    console.log(pass);\r\n    console.log(pass2);\r\n    console.log(nickname);\r\n    console.log(sex);\r\n    console.log(birth);\r\n    console.log(phone);\r\n  };\r\n  \r\n  return (\r\n\t<div className=\"JoinForm\">\r\n      <div className=\"navLogo\" onClick={(e) => {clickBtn(\"/\", e)}}>\r\n        <span className=\"navLogo\">JOB-HUNTER </span>\r\n      </div>\r\n\t  <div className=\"InputId\">\r\n\t  \t<input type=\"text\" path=\"email\" placeholder=\"이메일\" id=\"email\" name=\"email\" value={email} onChange={handleInputEmail} onKeyUp={idCheck}/>\r\n      <div style={ id_ == 0 ? {display:\"block\"} : {display:\"none\"}}>아이디가 중복됩니다</div>\r\n\t  </div>\r\n\t  <div className=\"InputPw\">\r\n\t  \t<input type=\"password\" path=\"pass\" placeholder=\"비밀번호\" id=\"pass\" name=\"pass\" value={pass} onChange={handleInputPw} />\r\n\t  </div>\r\n\t  <div className=\"InputPwCheck\">\r\n\t  \t<input type=\"password\" path=\"pass2\" placeholder=\"비밀번호 확인\" id=\"pass2\" name=\"pass2\" value={pass2} onChange={handleInputPw2} onKeyUp={pwCheck} />\r\n      <div style={ pass_ == 0 ? {display:\"block\"} : {display:\"none\"}}>비밀번호가 일치하지 않습니다</div>\r\n\t  </div>\r\n\t  {/* <div className=\"InputName\">\r\n\t  \t<input type=\"text\" path=\"name\" placeholder=\"이름\" id=\"name\" name=\"name\" value={name} onChange={handleInputName} />\r\n\t  </div> */}\r\n\t  <div className=\"InputNickName\">\r\n\t  \t<input type=\"text\" path=\"nickname\" placeholder=\"닉네임\" id=\"nickname\" name=\"nickname\" value={nickname} onChange={handleInputnickname} onKeyUp={nickCheck} />\r\n      <div style={ nickname_ == 0 ? {display:\"block\"} : {display:\"none\"}}>닉네임이 중복됩니다</div>\r\n\t  </div>\r\n\t  <div className=\"InputBirth\">\r\n\t\t<div className=\"Birth\">\r\n\t\t\t<span>생년월일</span>\r\n\t\t</div>\r\n\t\t<div className=\"InputBirthForm\">\r\n\t\t\t<input type=\"text\" maxLength=\"8\" onChange={handleInputBirth} id=\"birth\" name=\"birth\" value={birth} placeholder=\"생년월일 (8자)\" />\r\n\t\t\t{/* <select name=\"month\">\r\n\t\t\t\t<option value=\"월\">월</option>\r\n\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t<option value=\"11\">11</option>\r\n\t\t\t\t<option value=\"12\">12</option>\r\n\t\t\t</select> */}\r\n\t\t\t{/* <input type=\"text\" maxLength=\"2\" placeholder=\"일\" /> */}\r\n\t\t</div>\r\n\t  </div>\r\n\t  <div className=\"InputSex\">\r\n\t\t<select name=\"sex\" onChange={handleInputSex}>\r\n\t\t\t<option value=\"\">성별</option>\r\n\t\t\t<option value=\"M\">남</option>\r\n\t\t\t<option value=\"W\">여</option>\r\n\t\t\t<option value=\"N\">선택 안함</option>\r\n\t\t</select>\r\n\t  </div>\r\n\t  <div className=\"InputPhone\">\r\n\t  \t<input type=\"text\" path=\"phone\" name=\"phone\" value={phone} placeholder=\"전화번호\" onChange={handleInputPhone} />\r\n\t  </div>\r\n\t  <div className=\"JoinNextBtn\" onClick={onClickJoin}>가입하기</div>\r\n\t</div>\r\n  )\r\n}\r\n\r\nconst clickBtn = (params, e) => {\r\n    console.log(params);\r\n    if(params == \"/\") {\r\n        document.location.href = \"/\";\r\n    } else if(params == \"Join\") {\r\n        document.location.href = \"/join\";\r\n    }\r\n};\r\n\r\nexport default Join;\r\n","C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\js\\Form\\Footer.js",[],[],"C:\\Users\\ace\\Project\\frontend_jobhunt\\src\\js\\Form\\Header.js",["110"],[],"import \"./header.css\"\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction Header() {\r\n\tconst [isLogin, setIsLogin] = useState(false); //로그인 관리\r\n\tuseEffect(() => {\r\n\t\tif (sessionStorage.getItem(\"tokenId\") === null) {\r\n\t\t\t// sessionStorage 에 name 라는 key 값으로 저장된 값이 없다면\r\n\t\t} else {\r\n\t\t\t// sessionStorage 에 name 라는 key 값으로 저장된 값이 있다면\r\n\t\t\t// 로그인 상태 변경\r\n\t\t\tsetIsLogin(true);\r\n\t\t}\r\n\t});\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"Header\">\r\n\t\t\t<nav className=\"navbar\">\r\n\t\t\t\t<div className=\"navLogo\" onClick={clickLogo}>\r\n\t\t\t\t\t<span className=\"navLogo\">JOB </span>\r\n\t\t\t\t\t<span className=\"navLogo\" id=\"LogoColor\">HUNTER</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul className=\"navMenu\">\r\n\t\t\t\t\t{/* 로그인 후 메뉴 표시 */}\r\n\t\t\t\t\t{isLogin ? <li><a className=\"menu\" href=\"/mypage\">{\"마이페이지\"}</a></li> : <li></li>}\r\n\t\t\t\t\t{isLogin ? (<li><a className=\"menu\" onClick={() => { sessionStorage.clear() }} href=\"/\">{'로그아웃'}</a></li>)\r\n\t\t\t\t\t\t: (<li><a className=\"menu\" href=\"/login\">{'로그인'}</a></li>)}\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst clickLogo = () => {\r\n\tdocument.location.href = '/';\r\n}\r\n\r\nexport default Header;",{"ruleId":"111","severity":1,"message":"112","line":1,"column":40,"nodeType":"113","messageId":"114","endLine":1,"endColumn":44},{"ruleId":"111","severity":1,"message":"115","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},{"ruleId":"111","severity":1,"message":"116","line":29,"column":10,"nodeType":"113","messageId":"114","endLine":29,"endColumn":17},{"ruleId":"111","severity":1,"message":"117","line":31,"column":10,"nodeType":"113","messageId":"114","endLine":31,"endColumn":12},{"ruleId":"111","severity":1,"message":"118","line":31,"column":14,"nodeType":"113","messageId":"114","endLine":31,"endColumn":19},{"ruleId":"111","severity":1,"message":"119","line":37,"column":10,"nodeType":"113","messageId":"114","endLine":37,"endColumn":14},{"ruleId":"111","severity":1,"message":"120","line":39,"column":10,"nodeType":"113","messageId":"114","endLine":39,"endColumn":18},{"ruleId":"111","severity":1,"message":"121","line":39,"column":20,"nodeType":"113","messageId":"114","endLine":39,"endColumn":29},{"ruleId":"111","severity":1,"message":"122","line":41,"column":12,"nodeType":"113","messageId":"114","endLine":41,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":61,"column":25,"nodeType":"125","messageId":"126","endLine":61,"endColumn":27},{"ruleId":"123","severity":1,"message":"124","line":74,"column":28,"nodeType":"125","messageId":"126","endLine":74,"endColumn":30},{"ruleId":"123","severity":1,"message":"124","line":100,"column":29,"nodeType":"125","messageId":"126","endLine":100,"endColumn":31},{"ruleId":"111","severity":1,"message":"127","line":108,"column":7,"nodeType":"113","messageId":"114","endLine":108,"endColumn":14},{"ruleId":"111","severity":1,"message":"128","line":109,"column":10,"nodeType":"113","messageId":"114","endLine":109,"endColumn":17},{"ruleId":"129","severity":1,"message":"130","line":111,"column":3,"nodeType":"113","endLine":111,"endColumn":12,"suggestions":"131"},{"ruleId":"111","severity":1,"message":"132","line":138,"column":10,"nodeType":"113","messageId":"114","endLine":138,"endColumn":14},{"ruleId":"111","severity":1,"message":"133","line":138,"column":16,"nodeType":"113","messageId":"114","endLine":138,"endColumn":23},{"ruleId":"111","severity":1,"message":"134","line":145,"column":9,"nodeType":"113","messageId":"114","endLine":145,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":164,"column":38,"nodeType":"137","messageId":"138","endLine":164,"endColumn":40},{"ruleId":"111","severity":1,"message":"139","line":201,"column":9,"nodeType":"113","messageId":"114","endLine":201,"endColumn":22},{"ruleId":"123","severity":1,"message":"124","line":249,"column":27,"nodeType":"125","messageId":"126","endLine":249,"endColumn":29},{"ruleId":"123","severity":1,"message":"124","line":255,"column":34,"nodeType":"125","messageId":"126","endLine":255,"endColumn":36},{"ruleId":"135","severity":1,"message":"140","line":302,"column":42,"nodeType":"137","messageId":"141","endLine":302,"endColumn":44},{"ruleId":"123","severity":1,"message":"124","line":303,"column":36,"nodeType":"125","messageId":"126","endLine":303,"endColumn":38},{"ruleId":"111","severity":1,"message":"142","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"123","severity":1,"message":"124","line":23,"column":19,"nodeType":"125","messageId":"126","endLine":23,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":32,"column":36,"nodeType":"125","messageId":"126","endLine":32,"endColumn":38},{"ruleId":"123","severity":1,"message":"124","line":35,"column":42,"nodeType":"125","messageId":"126","endLine":35,"endColumn":44},{"ruleId":"123","severity":1,"message":"124","line":49,"column":29,"nodeType":"125","messageId":"126","endLine":49,"endColumn":31},{"ruleId":"123","severity":1,"message":"124","line":60,"column":37,"nodeType":"125","messageId":"126","endLine":60,"endColumn":39},{"ruleId":"123","severity":1,"message":"124","line":90,"column":40,"nodeType":"125","messageId":"126","endLine":90,"endColumn":42},{"ruleId":"123","severity":1,"message":"124","line":193,"column":35,"nodeType":"125","messageId":"126","endLine":193,"endColumn":37},{"ruleId":"135","severity":1,"message":"136","line":227,"column":39,"nodeType":"137","messageId":"138","endLine":227,"endColumn":41},{"ruleId":"143","severity":1,"message":"144","line":251,"column":17,"nodeType":"145","endLine":251,"endColumn":126},{"ruleId":"111","severity":1,"message":"142","line":2,"column":27,"nodeType":"113","messageId":"114","endLine":2,"endColumn":36},{"ruleId":"111","severity":1,"message":"146","line":14,"column":10,"nodeType":"113","messageId":"114","endLine":14,"endColumn":15},{"ruleId":"111","severity":1,"message":"147","line":15,"column":10,"nodeType":"113","messageId":"114","endLine":15,"endColumn":17},{"ruleId":"111","severity":1,"message":"148","line":16,"column":10,"nodeType":"113","messageId":"114","endLine":16,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":56,"column":24,"nodeType":"125","messageId":"126","endLine":56,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":59,"column":31,"nodeType":"125","messageId":"126","endLine":59,"endColumn":33},{"ruleId":"123","severity":1,"message":"124","line":77,"column":26,"nodeType":"125","messageId":"126","endLine":77,"endColumn":28},{"ruleId":"123","severity":1,"message":"124","line":80,"column":33,"nodeType":"125","messageId":"126","endLine":80,"endColumn":35},{"ruleId":"123","severity":1,"message":"124","line":95,"column":26,"nodeType":"125","messageId":"126","endLine":95,"endColumn":28},{"ruleId":"123","severity":1,"message":"124","line":98,"column":33,"nodeType":"125","messageId":"126","endLine":98,"endColumn":35},{"ruleId":"123","severity":1,"message":"149","line":109,"column":13,"nodeType":"125","messageId":"126","endLine":109,"endColumn":15},{"ruleId":"123","severity":1,"message":"149","line":110,"column":12,"nodeType":"125","messageId":"126","endLine":110,"endColumn":14},{"ruleId":"123","severity":1,"message":"149","line":111,"column":13,"nodeType":"125","messageId":"126","endLine":111,"endColumn":15},{"ruleId":"123","severity":1,"message":"149","line":112,"column":16,"nodeType":"125","messageId":"126","endLine":112,"endColumn":18},{"ruleId":"123","severity":1,"message":"149","line":113,"column":11,"nodeType":"125","messageId":"126","endLine":113,"endColumn":13},{"ruleId":"123","severity":1,"message":"149","line":114,"column":13,"nodeType":"125","messageId":"126","endLine":114,"endColumn":15},{"ruleId":"123","severity":1,"message":"149","line":115,"column":13,"nodeType":"125","messageId":"126","endLine":115,"endColumn":15},{"ruleId":"123","severity":1,"message":"124","line":117,"column":15,"nodeType":"125","messageId":"126","endLine":117,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":117,"column":29,"nodeType":"125","messageId":"126","endLine":117,"endColumn":31},{"ruleId":"123","severity":1,"message":"124","line":117,"column":47,"nodeType":"125","messageId":"126","endLine":117,"endColumn":49},{"ruleId":"123","severity":1,"message":"124","line":137,"column":30,"nodeType":"125","messageId":"126","endLine":137,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":153,"column":22,"nodeType":"125","messageId":"126","endLine":153,"endColumn":24},{"ruleId":"123","severity":1,"message":"124","line":155,"column":24,"nodeType":"125","messageId":"126","endLine":155,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":157,"column":28,"nodeType":"125","messageId":"126","endLine":157,"endColumn":30},{"ruleId":"123","severity":1,"message":"124","line":181,"column":24,"nodeType":"125","messageId":"126","endLine":181,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":188,"column":26,"nodeType":"125","messageId":"126","endLine":188,"endColumn":28},{"ruleId":"123","severity":1,"message":"124","line":195,"column":30,"nodeType":"125","messageId":"126","endLine":195,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":239,"column":15,"nodeType":"125","messageId":"126","endLine":239,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":241,"column":22,"nodeType":"125","messageId":"126","endLine":241,"endColumn":24},{"ruleId":"129","severity":1,"message":"130","line":7,"column":2,"nodeType":"113","endLine":7,"endColumn":11,"suggestions":"150"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'message' is assigned a value but never used.","'ch' is assigned a value but never used.","'setCh' is assigned a value but never used.","'user' is assigned a value but never used.","'isResult' is assigned a value but never used.","'setResult' is assigned a value but never used.","'callback' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'tokenId' is assigned a value but never used.","'isLogin' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIsLogin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["151"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'styleInfo' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'searchCompany' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'idMes' is assigned a value but never used.","'passMes' is assigned a value but never used.","'nickNameMes' is assigned a value but never used.","Expected '!==' and instead saw '!='.",["152"],{"desc":"153","fix":"154"},{"desc":"153","fix":"155"},"Add dependencies array: []",{"range":"156","text":"157"},{"range":"158","text":"157"},[3484,3484],", []",[392,392]]